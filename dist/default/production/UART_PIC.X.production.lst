

Microchip MPLAB XC8 Assembler V2.50 build 20240725155939 
                                                                                               Tue Nov 12 23:16:11 2024

Microchip MPLAB XC8 C Compiler v2.50 (Free license) build 20240725155939 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,space=0,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,space=0,delta=1
     7                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	text0,global,reloc=2,class=CODE,space=0,delta=1
     9                           	psect	text1,global,reloc=2,class=CODE,space=0,delta=1
    10                           	psect	text2,global,reloc=2,class=CODE,space=0,delta=1
    11                           	psect	text3,global,reloc=2,class=CODE,space=0,delta=1
    12                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    13                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    14   000000                     
    15                           ; Generated 17/10/2023 GMT
    16                           ; 
    17                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    18                           ; All rights reserved.
    19                           ; 
    20                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    21                           ; 
    22                           ; Redistribution and use in source and binary forms, with or without modification, are
    23                           ; permitted provided that the following conditions are met:
    24                           ; 
    25                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    26                           ;        conditions and the following disclaimer.
    27                           ; 
    28                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    29                           ;        of conditions and the following disclaimer in the documentation and/or other
    30                           ;        materials provided with the distribution. Publication is not required when
    31                           ;        this file is used in an embedded application.
    32                           ; 
    33                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    34                           ;        software without specific prior written permission.
    35                           ; 
    36                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    37                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    38                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    39                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    40                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    41                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    42                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    43                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    44                           ; 
    45                           ; 
    46                           ; Code-generator required, PIC18F4550 Definitions
    47                           ; 
    48                           ; SFR Addresses
    49   000FE0                     bsr             equ	4064
    50   000FE9                     fsr0            equ	4073
    51   000FEA                     fsr0h           equ	4074
    52   000FE9                     fsr0l           equ	4073
    53   000FE1                     fsr1            equ	4065
    54   000FE2                     fsr1h           equ	4066
    55   000FE1                     fsr1l           equ	4065
    56   000FD9                     fsr2            equ	4057
    57   000FDA                     fsr2h           equ	4058
    58   000FD9                     fsr2l           equ	4057
    59   000FEF                     indf0           equ	4079
    60   000FE7                     indf1           equ	4071
    61   000FDF                     indf2           equ	4063
    62   000FF2                     intcon          equ	4082
    63   000000                     nvmcon          equ	0
    64   000FF9                     pcl             equ	4089
    65   000FFA                     pclath          equ	4090
    66   000FFB                     pclatu          equ	4091
    67   000FEB                     plusw0          equ	4075
    68   000FE3                     plusw1          equ	4067
    69   000FDB                     plusw2          equ	4059
    70   000FED                     postdec0        equ	4077
    71   000FE5                     postdec1        equ	4069
    72   000FDD                     postdec2        equ	4061
    73   000FEE                     postinc0        equ	4078
    74   000FE6                     postinc1        equ	4070
    75   000FDE                     postinc2        equ	4062
    76   000FEC                     preinc0         equ	4076
    77   000FE4                     preinc1         equ	4068
    78   000FDC                     preinc2         equ	4060
    79   000FF3                     prod            equ	4083
    80   000FF4                     prodh           equ	4084
    81   000FF3                     prodl           equ	4083
    82   000FD8                     status          equ	4056
    83   000FF5                     tablat          equ	4085
    84   000FF6                     tblptr          equ	4086
    85   000FF7                     tblptrh         equ	4087
    86   000FF6                     tblptrl         equ	4086
    87   000FF8                     tblptru         equ	4088
    88   000FFD                     tosl            equ	4093
    89   000FE8                     wreg            equ	4072
    90   000F62                     SPPDATA         equ	3938	;# 
    91   000F63                     SPPCFG          equ	3939	;# 
    92   000F64                     SPPEPS          equ	3940	;# 
    93   000F65                     SPPCON          equ	3941	;# 
    94   000F66                     UFRM            equ	3942	;# 
    95   000F66                     UFRML           equ	3942	;# 
    96   000F67                     UFRMH           equ	3943	;# 
    97   000F68                     UIR             equ	3944	;# 
    98   000F69                     UIE             equ	3945	;# 
    99   000F6A                     UEIR            equ	3946	;# 
   100   000F6B                     UEIE            equ	3947	;# 
   101   000F6C                     USTAT           equ	3948	;# 
   102   000F6D                     UCON            equ	3949	;# 
   103   000F6E                     UADDR           equ	3950	;# 
   104   000F6F                     UCFG            equ	3951	;# 
   105   000F70                     UEP0            equ	3952	;# 
   106   000F71                     UEP1            equ	3953	;# 
   107   000F72                     UEP2            equ	3954	;# 
   108   000F73                     UEP3            equ	3955	;# 
   109   000F74                     UEP4            equ	3956	;# 
   110   000F75                     UEP5            equ	3957	;# 
   111   000F76                     UEP6            equ	3958	;# 
   112   000F77                     UEP7            equ	3959	;# 
   113   000F78                     UEP8            equ	3960	;# 
   114   000F79                     UEP9            equ	3961	;# 
   115   000F7A                     UEP10           equ	3962	;# 
   116   000F7B                     UEP11           equ	3963	;# 
   117   000F7C                     UEP12           equ	3964	;# 
   118   000F7D                     UEP13           equ	3965	;# 
   119   000F7E                     UEP14           equ	3966	;# 
   120   000F7F                     UEP15           equ	3967	;# 
   121   000F80                     PORTA           equ	3968	;# 
   122   000F81                     PORTB           equ	3969	;# 
   123   000F82                     PORTC           equ	3970	;# 
   124   000F83                     PORTD           equ	3971	;# 
   125   000F84                     PORTE           equ	3972	;# 
   126   000F89                     LATA            equ	3977	;# 
   127   000F8A                     LATB            equ	3978	;# 
   128   000F8B                     LATC            equ	3979	;# 
   129   000F8C                     LATD            equ	3980	;# 
   130   000F8D                     LATE            equ	3981	;# 
   131   000F92                     TRISA           equ	3986	;# 
   132   000F92                     DDRA            equ	3986	;# 
   133   000F93                     TRISB           equ	3987	;# 
   134   000F93                     DDRB            equ	3987	;# 
   135   000F94                     TRISC           equ	3988	;# 
   136   000F94                     DDRC            equ	3988	;# 
   137   000F95                     TRISD           equ	3989	;# 
   138   000F95                     DDRD            equ	3989	;# 
   139   000F96                     TRISE           equ	3990	;# 
   140   000F96                     DDRE            equ	3990	;# 
   141   000F9B                     OSCTUNE         equ	3995	;# 
   142   000F9D                     PIE1            equ	3997	;# 
   143   000F9E                     PIR1            equ	3998	;# 
   144   000F9F                     IPR1            equ	3999	;# 
   145   000FA0                     PIE2            equ	4000	;# 
   146   000FA1                     PIR2            equ	4001	;# 
   147   000FA2                     IPR2            equ	4002	;# 
   148   000FA6                     EECON1          equ	4006	;# 
   149   000FA7                     EECON2          equ	4007	;# 
   150   000FA8                     EEDATA          equ	4008	;# 
   151   000FA9                     EEADR           equ	4009	;# 
   152   000FAB                     RCSTA           equ	4011	;# 
   153   000FAB                     RCSTA1          equ	4011	;# 
   154   000FAC                     TXSTA           equ	4012	;# 
   155   000FAC                     TXSTA1          equ	4012	;# 
   156   000FAD                     TXREG           equ	4013	;# 
   157   000FAD                     TXREG1          equ	4013	;# 
   158   000FAE                     RCREG           equ	4014	;# 
   159   000FAE                     RCREG1          equ	4014	;# 
   160   000FAF                     SPBRG           equ	4015	;# 
   161   000FAF                     SPBRG1          equ	4015	;# 
   162   000FB0                     SPBRGH          equ	4016	;# 
   163   000FB1                     T3CON           equ	4017	;# 
   164   000FB2                     TMR3            equ	4018	;# 
   165   000FB2                     TMR3L           equ	4018	;# 
   166   000FB3                     TMR3H           equ	4019	;# 
   167   000FB4                     CMCON           equ	4020	;# 
   168   000FB5                     CVRCON          equ	4021	;# 
   169   000FB6                     ECCP1AS         equ	4022	;# 
   170   000FB6                     CCP1AS          equ	4022	;# 
   171   000FB7                     ECCP1DEL        equ	4023	;# 
   172   000FB7                     CCP1DEL         equ	4023	;# 
   173   000FB8                     BAUDCON         equ	4024	;# 
   174   000FB8                     BAUDCTL         equ	4024	;# 
   175   000FBA                     CCP2CON         equ	4026	;# 
   176   000FBB                     CCPR2           equ	4027	;# 
   177   000FBB                     CCPR2L          equ	4027	;# 
   178   000FBC                     CCPR2H          equ	4028	;# 
   179   000FBD                     CCP1CON         equ	4029	;# 
   180   000FBD                     ECCP1CON        equ	4029	;# 
   181   000FBE                     CCPR1           equ	4030	;# 
   182   000FBE                     CCPR1L          equ	4030	;# 
   183   000FBF                     CCPR1H          equ	4031	;# 
   184   000FC0                     ADCON2          equ	4032	;# 
   185   000FC1                     ADCON1          equ	4033	;# 
   186   000FC2                     ADCON0          equ	4034	;# 
   187   000FC3                     ADRES           equ	4035	;# 
   188   000FC3                     ADRESL          equ	4035	;# 
   189   000FC4                     ADRESH          equ	4036	;# 
   190   000FC5                     SSPCON2         equ	4037	;# 
   191   000FC6                     SSPCON1         equ	4038	;# 
   192   000FC7                     SSPSTAT         equ	4039	;# 
   193   000FC8                     SSPADD          equ	4040	;# 
   194   000FC9                     SSPBUF          equ	4041	;# 
   195   000FCA                     T2CON           equ	4042	;# 
   196   000FCB                     PR2             equ	4043	;# 
   197   000FCB                     MEMCON          equ	4043	;# 
   198   000FCC                     TMR2            equ	4044	;# 
   199   000FCD                     T1CON           equ	4045	;# 
   200   000FCE                     TMR1            equ	4046	;# 
   201   000FCE                     TMR1L           equ	4046	;# 
   202   000FCF                     TMR1H           equ	4047	;# 
   203   000FD0                     RCON            equ	4048	;# 
   204   000FD1                     WDTCON          equ	4049	;# 
   205   000FD2                     HLVDCON         equ	4050	;# 
   206   000FD2                     LVDCON          equ	4050	;# 
   207   000FD3                     OSCCON          equ	4051	;# 
   208   000FD5                     T0CON           equ	4053	;# 
   209   000FD6                     TMR0            equ	4054	;# 
   210   000FD6                     TMR0L           equ	4054	;# 
   211   000FD7                     TMR0H           equ	4055	;# 
   212   000FD8                     STATUS          equ	4056	;# 
   213   000FD9                     FSR2            equ	4057	;# 
   214   000FD9                     FSR2L           equ	4057	;# 
   215   000FDA                     FSR2H           equ	4058	;# 
   216   000FDB                     PLUSW2          equ	4059	;# 
   217   000FDC                     PREINC2         equ	4060	;# 
   218   000FDD                     POSTDEC2        equ	4061	;# 
   219   000FDE                     POSTINC2        equ	4062	;# 
   220   000FDF                     INDF2           equ	4063	;# 
   221   000FE0                     BSR             equ	4064	;# 
   222   000FE1                     FSR1            equ	4065	;# 
   223   000FE1                     FSR1L           equ	4065	;# 
   224   000FE2                     FSR1H           equ	4066	;# 
   225   000FE3                     PLUSW1          equ	4067	;# 
   226   000FE4                     PREINC1         equ	4068	;# 
   227   000FE5                     POSTDEC1        equ	4069	;# 
   228   000FE6                     POSTINC1        equ	4070	;# 
   229   000FE7                     INDF1           equ	4071	;# 
   230   000FE8                     WREG            equ	4072	;# 
   231   000FE9                     FSR0            equ	4073	;# 
   232   000FE9                     FSR0L           equ	4073	;# 
   233   000FEA                     FSR0H           equ	4074	;# 
   234   000FEB                     PLUSW0          equ	4075	;# 
   235   000FEC                     PREINC0         equ	4076	;# 
   236   000FED                     POSTDEC0        equ	4077	;# 
   237   000FEE                     POSTINC0        equ	4078	;# 
   238   000FEF                     INDF0           equ	4079	;# 
   239   000FF0                     INTCON3         equ	4080	;# 
   240   000FF1                     INTCON2         equ	4081	;# 
   241   000FF2                     INTCON          equ	4082	;# 
   242   000FF3                     PROD            equ	4083	;# 
   243   000FF3                     PRODL           equ	4083	;# 
   244   000FF4                     PRODH           equ	4084	;# 
   245   000FF5                     TABLAT          equ	4085	;# 
   246   000FF6                     TBLPTR          equ	4086	;# 
   247   000FF6                     TBLPTRL         equ	4086	;# 
   248   000FF7                     TBLPTRH         equ	4087	;# 
   249   000FF8                     TBLPTRU         equ	4088	;# 
   250   000FF9                     PCLAT           equ	4089	;# 
   251   000FF9                     PC              equ	4089	;# 
   252   000FF9                     PCL             equ	4089	;# 
   253   000FFA                     PCLATH          equ	4090	;# 
   254   000FFB                     PCLATU          equ	4091	;# 
   255   000FFC                     STKPTR          equ	4092	;# 
   256   000FFD                     TOS             equ	4093	;# 
   257   000FFD                     TOSL            equ	4093	;# 
   258   000FFE                     TOSH            equ	4094	;# 
   259   000FFF                     TOSU            equ	4095	;# 
   260   007CF4                     _TXIF           set	31988
   261   007CA7                     _TRISC7         set	31911
   262   007CA6                     _TRISC6         set	31910
   263   000FAD                     _TXREG          set	4013
   264   000FAB                     _RCSTA          set	4011
   265   000FAC                     _TXSTA          set	4012
   266   000FAF                     _SPBRG          set	4015
   267                           
   268                           	psect	smallconst
   269   000800                     __psmallconst:
   270                           	callstack 0
   271   000800  00                 	db	0
   272   000801                     STR_1:
   273   000801  48                 	db	72	;'H'
   274   000802  65                 	db	101	;'e'
   275   000803  6C                 	db	108	;'l'
   276   000804  6C                 	db	108	;'l'
   277   000805  6F                 	db	111	;'o'
   278   000806  2C                 	db	44
   279   000807  20                 	db	32
   280   000808  55                 	db	85	;'U'
   281   000809  41                 	db	65	;'A'
   282   00080A  52                 	db	82	;'R'
   283   00080B  54                 	db	84	;'T'
   284   00080C  21                 	db	33
   285   00080D  00                 	db	0
   286   00080E  00                 	db	0	; dummy byte at the end
   287   000001                     __activetblptr  equ	1
   288                           
   289                           ; #config settings
   290                           
   291                           	psect	cinit
   292   000878                     __pcinit:
   293                           	callstack 0
   294   000878                     start_initialization:
   295                           	callstack 0
   296   000878                     __initialization:
   297                           	callstack 0
   298   000878                     end_of_initialization:
   299                           	callstack 0
   300   000878                     __end_of__initialization:
   301                           	callstack 0
   302   000878  0E00               	movlw	low (__Lsmallconst shr (0+16))
   303   00087A  6EF8               	movwf	tblptru,c
   304   00087C  0E08               	movlw	high __Lsmallconst
   305   00087E  6EF7               	movwf	tblptrh,c
   306   000880  0100               	movlb	0
   307   000882  EF29  F004         	goto	_main	;jump to C main() function
   308                           
   309                           	psect	cstackCOMRAM
   310   000001                     __pcstackCOMRAM:
   311                           	callstack 0
   312   000001                     UART_Tx@x:
   313                           	callstack 0
   314   000001                     
   315                           ; 1 bytes @ 0x0
   316   000001                     	ds	1
   317   000002                     UART_SendString@str:
   318                           	callstack 0
   319                           
   320                           ; 1 bytes @ 0x1
   321   000002                     	ds	1
   322   000003                     
   323                           ; 1 bytes @ 0x2
   324 ;;
   325 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   326 ;;
   327 ;; *************** function _main *****************
   328 ;; Defined at:
   329 ;;		line 9 in file "main.c"
   330 ;; Parameters:    Size  Location     Type
   331 ;;		None
   332 ;; Auto vars:     Size  Location     Type
   333 ;;		None
   334 ;; Return value:  Size  Location     Type
   335 ;;                  1    wreg      void 
   336 ;; Registers used:
   337 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   338 ;; Tracked objects:
   339 ;;		On entry : 0/0
   340 ;;		On exit  : 0/0
   341 ;;		Unchanged: 0/0
   342 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   343 ;;      Params:         0       0       0       0       0       0       0       0       0
   344 ;;      Locals:         0       0       0       0       0       0       0       0       0
   345 ;;      Temps:          0       0       0       0       0       0       0       0       0
   346 ;;      Totals:         0       0       0       0       0       0       0       0       0
   347 ;;Total ram usage:        0 bytes
   348 ;; Hardware stack levels required when called: 2
   349 ;; This function calls:
   350 ;;		_UART_Init
   351 ;;		_UART_SendString
   352 ;; This function is called by:
   353 ;;		Startup code after reset
   354 ;; This function uses a non-reentrant model
   355 ;;
   356                           
   357                           	psect	text0
   358   000852                     __ptext0:
   359                           	callstack 0
   360   000852                     _main:
   361                           	callstack 29
   362   000852                     
   363                           ;main.c: 10:     UART_Init();
   364   000852  EC33  F004         	call	_UART_Init	;wreg free
   365   000856                     
   366                           ;main.c: 11:     UART_SendString("Hello, UART!");
   367   000856  0E01               	movlw	low STR_1
   368   000858  6E02               	movwf	UART_SendString@str^0,c
   369   00085A  EC08  F004         	call	_UART_SendString	;wreg free
   370   00085E                     l23:
   371   00085E  EF2F  F004         	goto	l23
   372   000862  EF00  F000         	goto	start
   373   000866                     __end_of_main:
   374                           	callstack 0
   375                           
   376 ;; *************** function _UART_SendString *****************
   377 ;; Defined at:
   378 ;;		line 32 in file "main.c"
   379 ;; Parameters:    Size  Location     Type
   380 ;;  str             1    1[COMRAM] PTR const unsigned char 
   381 ;;		 -> STR_1(13), 
   382 ;; Auto vars:     Size  Location     Type
   383 ;;		None
   384 ;; Return value:  Size  Location     Type
   385 ;;                  1    wreg      void 
   386 ;; Registers used:
   387 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   388 ;; Tracked objects:
   389 ;;		On entry : 0/0
   390 ;;		On exit  : 0/0
   391 ;;		Unchanged: 0/0
   392 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   393 ;;      Params:         1       0       0       0       0       0       0       0       0
   394 ;;      Locals:         0       0       0       0       0       0       0       0       0
   395 ;;      Temps:          0       0       0       0       0       0       0       0       0
   396 ;;      Totals:         1       0       0       0       0       0       0       0       0
   397 ;;Total ram usage:        1 bytes
   398 ;; Hardware stack levels used: 1
   399 ;; Hardware stack levels required when called: 1
   400 ;; This function calls:
   401 ;;		_UART_Tx
   402 ;; This function is called by:
   403 ;;		_main
   404 ;; This function uses a non-reentrant model
   405 ;;
   406                           
   407                           	psect	text1
   408   000810                     __ptext1:
   409                           	callstack 0
   410   000810                     _UART_SendString:
   411                           	callstack 29
   412   000810                     
   413                           ;main.c: 33:     while (*str) {
   414   000810  EF11  F004         	goto	l747
   415   000814                     l743:
   416                           
   417                           ;main.c: 34:         UART_Tx(*str++);
   418   000814  C002  FFF6         	movff	UART_SendString@str,tblptrl
   419   000818                     	if	0	;There is only one active tblptr byte
   420   000818                     	endif
   421   000818                     	if	0	;tblptru may be non-zero
   422   000818                     	endif
   423   000818                     	if	0	;tblptru may be non-zero
   424   000818                     	endif
   425   000818  0008               	tblrd		*
   426   00081A  50F5               	movf	tablat,w,c
   427   00081C  EC1E  F004         	call	_UART_Tx
   428   000820  2A02               	incf	UART_SendString@str^0,f,c
   429   000822                     l747:
   430                           
   431                           ;main.c: 33:     while (*str) {
   432   000822  C002  FFF6         	movff	UART_SendString@str,tblptrl
   433   000826                     	if	0	;There is only one active tblptr byte
   434   000826                     	endif
   435   000826                     	if	0	;tblptru may be non-zero
   436   000826                     	endif
   437   000826                     	if	0	;tblptru may be non-zero
   438   000826                     	endif
   439   000826  0008               	tblrd		*
   440   000828  50F5               	movf	tablat,w,c
   441   00082A  0900               	iorlw	0
   442   00082C  A4D8               	btfss	status,2,c
   443   00082E  EF1B  F004         	goto	u31
   444   000832  EF1D  F004         	goto	u30
   445   000836                     u31:
   446   000836  EF0A  F004         	goto	l743
   447   00083A                     u30:
   448   00083A  0012               	return		;funcret
   449   00083C                     __end_of_UART_SendString:
   450                           	callstack 0
   451                           
   452 ;; *************** function _UART_Tx *****************
   453 ;; Defined at:
   454 ;;		line 27 in file "main.c"
   455 ;; Parameters:    Size  Location     Type
   456 ;;  x               1    wreg     unsigned char 
   457 ;; Auto vars:     Size  Location     Type
   458 ;;  x               1    0[COMRAM] unsigned char 
   459 ;; Return value:  Size  Location     Type
   460 ;;                  1    wreg      void 
   461 ;; Registers used:
   462 ;;		wreg
   463 ;; Tracked objects:
   464 ;;		On entry : 0/0
   465 ;;		On exit  : 0/0
   466 ;;		Unchanged: 0/0
   467 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   468 ;;      Params:         0       0       0       0       0       0       0       0       0
   469 ;;      Locals:         1       0       0       0       0       0       0       0       0
   470 ;;      Temps:          0       0       0       0       0       0       0       0       0
   471 ;;      Totals:         1       0       0       0       0       0       0       0       0
   472 ;;Total ram usage:        1 bytes
   473 ;; Hardware stack levels used: 1
   474 ;; This function calls:
   475 ;;		Nothing
   476 ;; This function is called by:
   477 ;;		_UART_SendString
   478 ;; This function uses a non-reentrant model
   479 ;;
   480                           
   481                           	psect	text2
   482   00083C                     __ptext2:
   483                           	callstack 0
   484   00083C                     _UART_Tx:
   485                           	callstack 29
   486                           
   487                           ;incstack = 0
   488                           ;UART_Tx@x stored from wreg
   489   00083C  6E01               	movwf	UART_Tx@x^0,c
   490   00083E                     l32:
   491   00083E  A89E               	btfss	3998,4,c	;volatile
   492   000840  EF24  F004         	goto	u11
   493   000844  EF26  F004         	goto	u10
   494   000848                     u11:
   495   000848  EF1F  F004         	goto	l32
   496   00084C                     u10:
   497   00084C                     
   498                           ;main.c: 29:     TXREG = x;
   499   00084C  C001  FFAD         	movff	UART_Tx@x,4013	;volatile
   500   000850  0012               	return		;funcret
   501   000852                     __end_of_UART_Tx:
   502                           	callstack 0
   503                           
   504 ;; *************** function _UART_Init *****************
   505 ;; Defined at:
   506 ;;		line 16 in file "main.c"
   507 ;; Parameters:    Size  Location     Type
   508 ;;		None
   509 ;; Auto vars:     Size  Location     Type
   510 ;;  Baud_val        2    0        int 
   511 ;; Return value:  Size  Location     Type
   512 ;;                  1    wreg      void 
   513 ;; Registers used:
   514 ;;		wreg, status,2
   515 ;; Tracked objects:
   516 ;;		On entry : 0/0
   517 ;;		On exit  : 0/0
   518 ;;		Unchanged: 0/0
   519 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   520 ;;      Params:         0       0       0       0       0       0       0       0       0
   521 ;;      Locals:         0       0       0       0       0       0       0       0       0
   522 ;;      Temps:          0       0       0       0       0       0       0       0       0
   523 ;;      Totals:         0       0       0       0       0       0       0       0       0
   524 ;;Total ram usage:        0 bytes
   525 ;; Hardware stack levels used: 1
   526 ;; This function calls:
   527 ;;		Nothing
   528 ;; This function is called by:
   529 ;;		_main
   530 ;; This function uses a non-reentrant model
   531 ;;
   532                           
   533                           	psect	text3
   534   000866                     __ptext3:
   535                           	callstack 0
   536   000866                     _UART_Init:
   537                           	callstack 30
   538   000866                     
   539                           ;main.c: 20:     TRISC6 = 0;
   540   000866  9C94               	bcf	3988,6,c	;volatile
   541   000868                     
   542                           ;main.c: 21:     TRISC7 = 1;
   543   000868  8E94               	bsf	3988,7,c	;volatile
   544   00086A                     
   545                           ;main.c: 22:     SPBRG = Baud_val;
   546   00086A  0E4D               	movlw	77
   547   00086C  6EAF               	movwf	175,c	;volatile
   548                           
   549                           ;main.c: 23:     TXSTA = 0x20;
   550   00086E  0E20               	movlw	32
   551   000870  6EAC               	movwf	172,c	;volatile
   552                           
   553                           ;main.c: 24:     RCSTA = 0x90;
   554   000872  0E90               	movlw	144
   555   000874  6EAB               	movwf	171,c	;volatile
   556   000876  0012               	return		;funcret
   557   000878                     __end_of_UART_Init:
   558                           	callstack 0
   559                           
   560                           	psect	rparam
   561   000001                     ___rparam_used  equ	1
   562   000000                     ___param_bank   equ	0
   563   000000                     __Lparam        equ	__Lrparam
   564   000000                     __Hparam        equ	__Hrparam
   565                           tosu	equ	0xFFF
   566                           tosh	equ	0xFFE
   567                           tosl	equ	0xFFD
   568                           stkptr	equ	0xFFC
   569                           pclatu	equ	0xFFB
   570                           pclath	equ	0xFFA
   571                           pcl	equ	0xFF9
   572                           tblptru	equ	0xFF8
   573                           tblptrh	equ	0xFF7
   574                           tblptrl	equ	0xFF6
   575                           tablat	equ	0xFF5
   576                           prodh	equ	0xFF4
   577                           prodl	equ	0xFF3
   578                           indf0	equ	0xFEF
   579                           postinc0	equ	0xFEE
   580                           postdec0	equ	0xFED
   581                           preinc0	equ	0xFEC
   582                           plusw0	equ	0xFEB
   583                           fsr0h	equ	0xFEA
   584                           fsr0l	equ	0xFE9
   585                           wreg	equ	0xFE8
   586                           indf1	equ	0xFE7
   587                           postinc1	equ	0xFE6
   588                           postdec1	equ	0xFE5
   589                           preinc1	equ	0xFE4
   590                           plusw1	equ	0xFE3
   591                           fsr1h	equ	0xFE2
   592                           fsr1l	equ	0xFE1
   593                           bsr	equ	0xFE0
   594                           indf2	equ	0xFDF
   595                           postinc2	equ	0xFDE
   596                           postdec2	equ	0xFDD
   597                           preinc2	equ	0xFDC
   598                           plusw2	equ	0xFDB
   599                           fsr2h	equ	0xFDA
   600                           fsr2l	equ	0xFD9
   601                           status	equ	0xFD8

Data Sizes:
    Strings     13
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95      2       2
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    UART_SendString@str	PTR const unsigned char  size(1) Largest target is 13
		 -> STR_1(CODE[13]), 


Critical Paths under _main in COMRAM

    _main->_UART_SendString
    _UART_SendString->_UART_Tx

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0      76
                          _UART_Init
                    _UART_SendString
 ---------------------------------------------------------------------------------
 (1) _UART_SendString                                      1     0      1      61
                                              1 COMRAM     1     0      1
                            _UART_Tx
 ---------------------------------------------------------------------------------
 (2) _UART_Tx                                              1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _UART_Init                                            2     2      0      15
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _UART_Init
   _UART_SendString
     _UART_Tx

Address spaces:
Name               Size   Autos  Total    Usage
BITCOMRAM           95      0       0      0.0%
BITBANK0           160      0       0      0.0%
BITBANK1           256      0       0      0.0%
BITBANK2           256      0       0      0.0%
BITBANK3           256      0       0      0.0%
BITBANK4           256      0       0      0.0%
BITBANK5           256      0       0      0.0%
BITBANK6           256      0       0      0.0%
BITBANK7           256      0       0      0.0%
BITBIGSFRh          82      0       0      0.0%
BITBIGSFRll         52      0       0      0.0%
BITBIGSFRlh         24      0       0      0.0%
COMRAM              95      2       2      2.1%
BANK0              160      0       0      0.0%
BANK1              256      0       0      0.0%
BANK2              256      0       0      0.0%
BANK3              256      0       0      0.0%
BANK4              256      0       0      0.0%
BANK5              256      0       0      0.0%
BANK6              256      0       0      0.0%
BANK7              256      0       0      0.0%
BIGRAM            2047      0       0      0.0%
STACK                0      0       0      0.0%
DATA                 0      0       2      0.0%


Microchip Technology PIC18 Macro Assembler V2.50 build 20240725155939 
Symbol Table                                                                                   Tue Nov 12 23:16:11 2024

                     l23 085E                       l32 083E                       l24 085E  
                     l41 083A                       l35 0850                       l29 0876  
                     u10 084C                       u11 0848                       u30 083A  
                     u31 0836                      l721 0866                      l723 0866  
                    l725 0868                      l717 083E                      l741 0810  
                    l727 086A                      l719 084C                      l743 0814  
                    l751 0856                      l745 0820                      l747 0822  
                    l749 0852                     STR_1 0801                     _TXIF 7CF4  
        __end_of_UART_Tx 0852                     _main 0852                     start 0000  
           ___param_bank 0000                    ?_main 0001                    _RCSTA 0FAB  
                  _SPBRG 0FAF                    _TXREG 0FAD                    _TXSTA 0FAC  
       ?_UART_SendString 0002                    tablat 0FF5                    status 0FD8  
        __initialization 0878             __end_of_main 0866                   ??_main 0003  
          __activetblptr 0001                ??_UART_Tx 0001                   _TRISC6 7CA6  
                 _TRISC7 7CA7        __end_of_UART_Init 0878                   isa$std 0001  
           __mediumconst 0000                   tblptrh 0FF7                   tblptrl 0FF6  
                 tblptru 0FF8               __accesstop 0060  __end_of__initialization 0878  
          ___rparam_used 0001           __pcstackCOMRAM 0001                  _UART_Tx 083C  
                __Hparam 0000                  __Lparam 0000       UART_SendString@str 0002  
           __psmallconst 0800                  __pcinit 0878                  __ramtop 0800  
                __ptext0 0852                  __ptext1 0810                  __ptext2 083C  
                __ptext3 0866     end_of_initialization 0878                _UART_Init 0866  
             ?_UART_Init 0001      start_initialization 0878        ??_UART_SendString 0003  
               ?_UART_Tx 0001                 UART_Tx@x 0001              ??_UART_Init 0001  
            __smallconst 0800                 __Hrparam 0000                 __Lrparam 0000  
           __Lsmallconst 0800          _UART_SendString 0810                 isa$xinst 0000  
__end_of_UART_SendString 083C  
